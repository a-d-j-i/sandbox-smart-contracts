/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAssetMinter,
  IAssetMinterInterface,
} from "../../../contracts/interfaces/IAssetMinter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "AssetContractAddressChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "revealer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetCreator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "tier",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "assetNonce",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AssetRevealBurn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newTokenIds",
        type: "uint256[]",
      },
    ],
    name: "AssetsRevealed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "CatalystContractAddressChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_catalystContract",
        type: "address",
      },
    ],
    name: "changeAssetContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_catalystContract",
        type: "address",
      },
    ],
    name: "changeCatalystContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voxelHash",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "tier",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "creatorNonce",
            type: "uint16",
          },
        ],
        internalType: "struct IAssetMinter.MintableAsset",
        name: "asset",
        type: "tuple",
      },
    ],
    name: "mintAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "voxelHash",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "tier",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "creatorNonce",
            type: "uint16",
          },
        ],
        internalType: "struct IAssetMinter.MintableAsset[]",
        name: "mintableAssets",
        type: "tuple[]",
      },
    ],
    name: "mintAssetBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintExclusive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "catalystTier",
        type: "uint256",
      },
    ],
    name: "recycleAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAssetMinter__factory {
  static readonly abi = _abi;
  static createInterface(): IAssetMinterInterface {
    return new utils.Interface(_abi) as IAssetMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAssetMinter {
    return new Contract(address, _abi, signerOrProvider) as IAssetMinter;
  }
}
